buildscript {
	repositories {
		gradlePluginPortal()
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath "se.bjurr.gradle.java-convention:se.bjurr.gradle.java-convention.gradle.plugin:0.+"
		classpath "org.wiremock.tools.gradle:gradle-wiremock-extension-plugins:0.4.0"
	}
}

apply plugin: "project-report"
apply plugin: "se.bjurr.gradle.java-convention"

// Or else it will be 11 in wiremock-extension-convention
sourceCompatibility = 17
targetCompatibility = 17
apply plugin: "org.wiremock.tools.gradle.wiremock-extension-convention"

group 'org.wiremock.integrations'

jar {
	manifest {
		attributes 'name': project.name
		attributes 'Automatic-Module-Name': project.group + "." + project.name
	}
}

configurations {
	all*.exclude group: 'org.eclipse.jetty', module: 'jetty-servlet'
	all*.exclude group: 'org.eclipse.jetty', module: 'jetty-servlets'
	all*.exclude group: 'org.eclipse.jetty', module: 'jetty-webapp'
	all*.exclude group: 'org.eclipse.jetty.http2', module: 'http2-server'
}

dependencies {
	implementation platform("org.eclipse.jetty:jetty-bom:12.0.15")
	api "org.wiremock:wiremock-jetty:4.0.0-beta.9"
	/**
	 * We don't want a user to accidentally test with another version of these dependencies.
	 * Intentionally using compileOnly to avoid them being transitive.
	 */
	compileOnly 'org.springframework.boot:spring-boot-test:3.5.0'
	compileOnly 'org.junit.jupiter:junit-jupiter-api:5.12.2'
	compileOnly 'org.slf4j:slf4j-api:2.0.17'

	testImplementation 'org.springframework.boot:spring-boot-starter-web:3.5.0'
	testImplementation 'org.springframework.boot:spring-boot-test:3.5.0'
	testImplementation 'org.slf4j:slf4j-api:2.0.17'
	testImplementation 'org.assertj:assertj-core:3.27.3'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'io.rest-assured:rest-assured:5.5.5'
	testImplementation 'io.cucumber:cucumber-java:7.23.0'
	testImplementation 'io.cucumber:cucumber-spring:7.23.0'
	testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.23.0'
	testImplementation 'org.junit.platform:junit-platform-suite:1.12.2'
}

// Not using shadowJar, but currently not possible to disable in wiremock-extension-convention
shadowJar {
	mergeServiceFiles()
	exclude '**/*'
}
